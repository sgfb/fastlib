apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.2.1'
    testCompile 'junit:junit:4.12'
    compile project(':moduleCompile')
}

/**
 * 编译classes成jar
 */
task makeJar(dependsOn: ['compileDebugSources'], type: Jar) {
    from file('/build/intermediates/classes/debug')
    exclude 'android/**'
    exclude '**/R\$*.class'
    exclude '**/R.class'
    exclude '**/BuildConfig\$*.class'
}

/**
 * 编译普通jar成dex并且放到主项目录中
 */
task makeDex(dependsOn: ['makeJar'], type: Exec) {
    def dexFile = new File('D://Android_SDK/build-tools/27.0.3/dx.bat')
    def sourceFile = file('/build/libs/mylibrary.jar')
    def outFile = file("../fastlib/src/main/assets/mylibdex.jar")

    executable = dexFile
    args = [
            "--dex",
            "--output=" + outFile,
            sourceFile
    ]
}

/**
 * 当compileDebugSources运行后启动热更新项目部署task组
 */
project.tasks.whenTaskAdded { task ->
    if (task.name == 'compileDebugSources')
        task.finalizedBy makeDex
    else if(task.name=='mergeDebugResources'){
        task.doFirst {
            def layoutDir=file('/src/main/res/layout')
            layoutDir.eachFile { childFile->
                if(!childFile.name.startsWith('mylib_'))
                    childFile.renameTo(file("$layoutDir/mylib_$childFile.name"))
            }
        }
    }
}